on post-fs-data
    mkdir {{logs_dir}} 0770 system log

on property:persist.service.aplogfs.enable=0
    stop ap_logfs

on property:persist.service.aplogfs.enable=1
    setprop persist.service.apklogfs.enable 0
    restart ap_log_srv

on property:persist.service.apklogfs.enable=0
    stop apk_logfs

on property:persist.service.apklogfs.enable=1
    setprop persist.service.aplogfs.enable 0
    restart ap_log_srv

service apk_logfs /system/vendor/bin/logcat_ep.sh /system/vendor/bin/logcatext -b all -n 20 \
                  -r5000 -v threadtime -f {{logs_dir}}/aplog
    disabled

service ap_logfs /system/vendor/bin/logcat_ep.sh /system/bin/logcat -b all -n 20 -r5000 \
                 -v threadtime -f {{logs_dir}}/aplog
    disabled

# Service called when the configuration is updated through properties
service ap_log_srv /system/vendor/bin/start_log_srv.sh
    disabled
    oneshot

# Service called at boot time after data is decrypted
#
# This is done through the late_start class.
# ap_log_srv cannot be used for that as it will be started when persist
# properties are loaded. Starting a class of services will only launch
# the services that haven't been started yet.
service ap_log_srv_late /system/vendor/bin/start_log_srv.sh
    class late_start
    oneshot

service earlylogs /system/vendor/bin/elogs.sh
    class core
    oneshot

on nonencrypted
    stop earlylogs

on property:vold.decrypt=trigger_restart_framework
    stop earlylogs

on property:persist.service.elogs.enable=1
    mkdir /cache/elogs 0770 system log
    restorecon /cache/elogs

on property:persist.service.elogs.enable=0
    exec -- /system/bin/rm -rf /cache/elogs
